Modules and Packages

Concept:

In Python, modules and packages are used to organize and structure code.

A module is a single file that contains Python definitions, statements, and functions. It can be imported and used in other Python programs.

A package is a directory that contains multiple Python modules and an additional `__init__.py` file. The `__init__.py` file is used to mark the 
directory as a Python package. Packages provide a way to organize related modules together, forming a hierarchical structure.

Modules and packages help in avoiding naming conflicts, promote code modularity, and facilitate code sharing and reuse.

To use a module or package in your Python program, you need to import it using the `import` statement. For example:

        import module_name
    
You can then access the functions, classes, and variables defined in the module using the `module_name` prefix. For example:

        module_name.function_name()
        module_name.variable_name
    
For packages, you can import specific modules using the dot notation. For example:

        import package_name.module_name
    
You can also use the `from` keyword to import specific functions or variables from a module or package. For example:

        from module_name import function_name
        from package_name.module_name import function_name
    
By using modules and packages, you can organize your code into logical units, manage dependencies, and improve code readability and maintainability.
